<?xml version="1.0" encoding="utf-8" ?>
<nlog xmlns="http://www.nlog-project.org/schemas/NLog.xsd"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xsi:schemaLocation="http://www.nlog-project.org/schemas/NLog.xsd NLog.xsd"
      autoReload="true"
      throwExceptions="false"
      internalLogLevel="Off" internalLogFile="c:\temp\nlog-internal.log">

  <!-- optional, add some variables
  https://github.com/nlog/NLog/wiki/Configuration-file#variables
  -->
  <variable name="myvar" value="myvalue"/>
  <variable name="logFilePath" value="C:\Temp\LogDemo.log" />
  <variable name="logFileDaily" value="C:\Temp\LogDemo-${shortdate}.log" />

  <!--
  See https://github.com/nlog/nlog/wiki/Configuration-file
  for information on customizing logging rules and outputs.
   -->
  <targets async="true">

    <!--
    add your targets here
    See https://github.com/nlog/NLog/wiki/Targets for possible targets.
    See https://github.com/nlog/NLog/wiki/Layout-Renderers for the possible layout renderers.
    -->

    <!--
    Write events to a file with the date in the filename.
    <target xsi:type="File" name="f" fileName="${basedir}/logs/${shortdate}.log"
            layout="${longdate} ${uppercase:${level}} ${message}" />
    -->

    <target name="logfile"
            xsi:type="File"
            fileName="${logFilePath}"
            layout="${longdate} ${level:upperCase=true}: ${message} ${exception:format=tostring}"
            keepFileOpen="true" />

    <target name="db"
            xsi:type="Database"
            connectionStringName="Demo"
            commandType="StoredProcedure"
            commandText="dbo.PROC_I_SYSDLOG"
    >
      <parameter name="@tcMacNam"    layout="${machinename}" />
      <parameter name="@tcSitNam"       layout="${iis-site-name}" />
      <parameter name="@tdLogGed"         layout="${date}" />
      <parameter name="@tcLevel"          layout="${level}" />
      <parameter name="@tcUseNam"       layout="${aspnet-user-identity}" />
      <parameter name="@tcMesSag"        layout="${message}" />
      <parameter name="@tcLogGer"         layout="${logger}" />
      <parameter name="@tcProPer"     layout="${all-event-properties:separator=|}" />
      <parameter name="@tcSerNam"     layout="${aspnet-request:serverVariable=SERVER_NAME}" />
      <parameter name="@tcPort"           layout="${aspnet-request:serverVariable=SERVER_PORT}" />
      <parameter name="@tcUrl"            layout="${aspnet-request:serverVariable=HTTP_URL}" />
      <parameter name="@tlHttps"          layout="${when:inner=1:when='${aspnet-request:serverVariable=HTTPS}' == 'on'}${when:inner=0:when='${aspnet-request:serverVariable=HTTPS}' != 'on'}" />
      <parameter name="@tcSerAdd"  layout="${aspnet-request:serverVariable=LOCAL_ADDR}" />
      <parameter name="@tcRemAdd"  layout="${aspnet-request:serverVariable=REMOTE_ADDR}:${aspnet-request:serverVariable=REMOTE_PORT}" />
      <parameter name="@tcCalSit"       layout="${callsite}" />
      <parameter name="@tcExcTio"      layout="${exception:tostring}" />
      <parameter name="@tnIdeUsu"      layout="${event-properties:item=IdUsuario}" />
      <parameter name="@tcHosNam"      layout="${event-properties:item=Hostname}" />
    </target>
    
  </targets>

  <rules>
    <!-- add your logging rules here -->
    <logger name="*" levels="Debug,Trace,Error,Info" writeTo="logfile" />
    <!--<logger name="*" minlevel="Debug" writeTo="db" />-->
    <!--
    Write all events with minimal level of Debug (So Debug, Info, Warn, Error and Fatal, but not Trace)  to "f"
    <logger name="*" minlevel="Debug" writeTo="f" />
    -->
  </rules>
</nlog>
